---
name: build jsonnet

on:
  workflow_call:
    secrets:
      gh_token:
        required: false
      gh_app_id:
        required: false
      gh_app_private_key:
        required: false

env:
  AQUA_LOG_COLOR: always

permissions: {}

jobs:
  build-jsonnet:
    runs-on: ubuntu-latest
    permissions:
      contents: read # To checkout private repository
    steps:
      - name: Get ref
        id: ref
        run: |
          set -eu
          ref=""
          case "$GITHUB_EVENT_NAME" in
            "pull_request" ) ref="${{github.event.pull_request.head.sha}}";;
          esac
          echo "ref=$ref" >> "$GITHUB_OUTPUT"

      - name: Generate token
        id: generate_token
        if: "! github.event.pull_request.head.repo.fork"
        uses: suzuki-shunsuke/github-token-action@04d633c696e9d09e958c8b815c75db9606d6d927 # v0.2.0
        with:
          github_token: ${{secrets.gh_token}}
          github_app_id: ${{secrets.gh_app_id}}
          github_app_private_key: ${{secrets.gh_app_private_key}}

      - name: Get skip_push
        id: skip_push
        run: |
          set -eu
          skip_push=""
          case "$GITHUB_EVENT_NAME" in
            "pull_request" ) skip_push="${{github.event.pull_request.head.repo.fork}}";;
          esac
          if [ -z "$skip_push" ]; then
            skip_push=false
          fi
          if [ "$TOKEN_TYPE" = "empty" ]; then
            skip_push=false
          fi
          echo "skip_push=$skip_push" >> "$GITHUB_OUTPUT"
        env:
          TOKEN_TYPE: ${{steps.generate_token.outputs.token_type}}

      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: ${{steps.ref.outputs.ref}}

      # Install ghcp and go-jsonnet
      - uses: aquaproj/aqua-installer@294926f94b4233f202a2f03875c604f840cfed70 # v2.1.1
        if: steps.generate_token.outputs.token_type == 'empty'
        with:
          aqua_version: v2.3.6
        env:
          AQUA_GITHUB_TOKEN: ${{github.token}}
      - uses: aquaproj/aqua-installer@294926f94b4233f202a2f03875c604f840cfed70 # v2.1.1
        if: "steps.generate_token.outputs.token_type != 'empty'"
        with:
          aqua_version: v2.3.6
        env:
          AQUA_GITHUB_TOKEN: ${{steps.generate_token.outputs.token}}

      - run: bash generate.sh
        shell: bash

      - shell: bash
        run: git add renovate.json renovate/modules.json

      - shell: bash
        if: fromJSON(steps.skip_push.outputs.skip_push)
        run: |
          if ! git diff --cached --exit-code "$RENOVATE_JSON" "$MODULES_JSON"; then
            echo "::error ::$RENOVATE_JSON or $MODULES_JSON aren't latest."
            exit 1
          fi
        env:
          RENOVATE_JSON: renovate.json
          MODULES_JSON: renovate/modules.json

      - shell: bash
        if: "! fromJSON(steps.skip_push.outputs.skip_push)"
        run: |
          set -eu
          if git diff --cached --exit-code "$RENOVATE_JSON" "$MODULES_JSON"; then
            exit 0
          fi
          echo "::error ::$RENOVATE_JSON or $MODULES_JSON arn't latest. A commit is pushed automatically to update them."

          if ! ghcp -v; then
            echo "::error ::int128/ghcp isn't installed. To push a commit, ghcp is required."
            exit 1
          fi

          # https://github.com/int128/ghcp
          branch=${GITHUB_HEAD_REF:-}
          if [ -z "$branch" ]; then
            branch=$GITHUB_REF_NAME
          fi
          git diff --cached --name-only "$RENOVATE_JSON" "$MODULES_JSON" | xargs ghcp commit -r "$GITHUB_REPOSITORY" -b "$branch" \
            -m "chore(renovate): update $RENOVATE_JSON and $MODULES_JSON"
          exit 1
        env:
          RENOVATE_JSON: renovate.json
          MODULES_JSON: renovate/modules.json
          GITHUB_TOKEN: ${{steps.generate_token.outputs.token}}
